# Navigation2 Configuration for Modular-V
# Optimized for NVIDIA Jetson AGX Orin + ZED 2i Camera
# Indoor navigation for visually impaired assistance

navigation:
  # Velocity limits (conservative for indoor safety)
  max_linear_velocity: 0.5      # m/s
  max_angular_velocity: 0.8     # rad/s

  # Goal tolerances
  xy_goal_tolerance: 0.2         # meters
  yaw_goal_tolerance: 0.26       # radians (~15 degrees)

planner:
  # Planner plugin configuration
  plugin: "nav2_navfn_planner/NavfnPlanner"
  tolerance: 0.3                 # meters
  use_astar: false               # Use Dijkstra (faster for dense maps)
  allow_unknown: true            # Allow planning through unknown space

controller:
  # Controller server configuration
  frequency: 10                  # Hz (reduced from default 20 for Jetson)
  plugin: "dwb_core::DWBLocalPlanner"

  # Progress checker
  progress_checker:
    required_movement_radius: 0.5
    movement_time_allowance: 10.0

  # DWB specific parameters
  dwb:
    min_vel_x: 0.0
    max_vel_x: 0.5               # Match max_linear_velocity
    min_speed_xy: 0.0
    max_speed_xy: 0.5
    max_vel_theta: 0.8           # Match max_angular_velocity
    min_speed_theta: 0.0

    # Acceleration limits
    acc_lim_x: 1.0               # m/s^2 (smooth acceleration)
    acc_lim_theta: 2.0           # rad/s^2
    decel_lim_x: -1.5            # m/s^2 (slightly faster deceleration)
    decel_lim_theta: -2.5        # rad/s^2

    # Trajectory sampling
    vx_samples: 15               # Reduced for performance
    vtheta_samples: 15
    sim_time: 1.5                # seconds

    # Critics (path following behavior)
    critics:
      - RotateToGoal
      - Oscillation
      - BaseObstacle
      - GoalAlign
      - PathAlign
      - PathDist
      - GoalDist

costmaps:
  global:
    # Global costmap parameters
    resolution: 0.05             # meters (5cm grid)
    update_frequency: 1.0        # Hz
    publish_frequency: 1.0       # Hz

    # Frame configuration
    global_frame: "map"
    robot_base_frame: "base_link"

    # Map subscription
    map_topic: "/rtabmap/grid_map"

    # Layers
    plugins:
      - static_layer
      - obstacle_layer
      - inflation_layer

    # Layer configurations
    static_layer:
      enabled: true
      map_subscribe_transient_local: true

    obstacle_layer:
      enabled: true
      observation_sources: "depth_scan"
      depth_scan:
        topic: "/zed2i/zed_node/depth/depth_registered"
        sensor_frame: "zed2i_left_camera_frame"
        max_obstacle_height: 2.0
        min_obstacle_height: 0.1
        clearing: true
        marking: true

    inflation_layer:
      enabled: true
      inflation_radius: 0.55
      cost_scaling_factor: 3.0

  local:
    # Local costmap parameters (rolling window around robot)
    resolution: 0.05             # meters
    update_frequency: 3.0        # Hz (reduced from 5 for Jetson)
    publish_frequency: 2.0       # Hz

    # Rolling window configuration
    width: 3.0                   # meters
    height: 3.0                  # meters
    rolling_window: true

    # Frame configuration
    global_frame: "odom"
    robot_base_frame: "base_link"

    # Layers
    plugins:
      - voxel_layer
      - inflation_layer

    # Layer configurations
    voxel_layer:
      enabled: true
      publish_voxel_map: true
      origin_z: 0.0
      z_resolution: 0.05
      z_voxels: 16
      max_obstacle_height: 2.0
      min_obstacle_height: 0.1
      mark_threshold: 0

      observation_sources: "depth_scan"
      depth_scan:
        topic: "/zed2i/zed_node/depth/depth_registered"
        sensor_frame: "zed2i_left_camera_frame"
        max_obstacle_height: 2.0
        min_obstacle_height: 0.1
        clearing: true
        marking: true
        raytrace_max_range: 3.0
        raytrace_min_range: 0.0
        obstacle_max_range: 2.5
        obstacle_min_range: 0.0

    inflation_layer:
      enabled: true
      inflation_radius: 0.55
      cost_scaling_factor: 3.0

robot:
  # Robot physical parameters
  radius: 0.3                    # meters (footprint radius)
  base_frame: "base_link"

  # Frame IDs
  global_frame: "map"
  odom_frame: "odom"

topics:
  # Topic names for integration
  odom: "/zed2i/zed_node/odom"
  map: "/rtabmap/grid_map"
  cmd_vel: "/cmd_vel"

behavior:
  # Behavior server configuration
  autostart: true                # Auto-start lifecycle nodes
  use_sim_time: false

  # Recovery behaviors
  recovery_plugins:
    - backup
    - spin
    - wait

  backup:
    plugin: "nav2_behaviors/BackUp"
    backup_dist: 0.3
    backup_speed: 0.1

  spin:
    plugin: "nav2_behaviors/Spin"
    simulate_ahead_time: 2.0

  wait:
    plugin: "nav2_behaviors/Wait"

bt_navigator:
  # Behavior tree navigator
  use_sim_time: false
  global_frame: "map"
  robot_base_frame: "base_link"
  odom_topic: "/zed2i/zed_node/odom"

  # Behavior tree configuration
  bt_loop_duration: 10           # ms
  default_server_timeout: 20     # seconds
  wait_for_service_timeout: 1000 # ms

smoother:
  # Path smoother configuration
  use_sim_time: false
  smoother_plugins: ["simple_smoother"]

  simple_smoother:
    plugin: "nav2_smoother::SimpleSmoother"
    tolerance: 1.0e-10
    max_its: 1000
    do_refinement: true

velocity_smoother:
  # Velocity smoother configuration
  use_sim_time: false
  smoothing_frequency: 20.0      # Hz
  scale_velocities: false
  feedback: "OPEN_LOOP"

  # Velocity limits (match navigation limits)
  max_velocity: [0.5, 0.0, 0.8]  # [x, y, theta]
  min_velocity: [-0.3, 0.0, -0.8]

  # Deadband velocities (ignore small velocities)
  deadband_velocity: [0.0, 0.0, 0.0]

  # Acceleration limits
  max_accel: [1.0, 0.0, 2.0]
  max_decel: [-1.5, 0.0, -2.5]

  # Smoothing parameters
  odom_topic: "/zed2i/zed_node/odom"
  odom_duration: 0.1

waypoint_follower:
  # Waypoint follower configuration
  use_sim_time: false
  loop_rate: 20                  # Hz
  stop_on_failure: false
  waypoint_task_executor_plugin: "wait_at_waypoint"

  wait_at_waypoint:
    plugin: "nav2_waypoint_follower::WaitAtWaypoint"
    enabled: true
    waypoint_pause_duration: 200 # ms

# Performance tuning for Jetson AGX Orin
performance:
  # Memory management
  use_composition: false         # Use separate processes for stability

  # Threading
  use_multithreading: true
  num_threads: 4                 # Utilize Jetson cores

  # Optimization flags
  optimize_for_jetson: true
  cuda_acceleration: false       # Nav2 doesn't use CUDA directly
